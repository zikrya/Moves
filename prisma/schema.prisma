datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String  @id @default(cuid())
  email            String  @unique
  stripeCustomerId String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password     Password?
  events       Event[]
  transactions Transaction[]
  tickets      Ticket[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Event {
  id           String   @id @default(cuid())
  name         String
  summary      String
  description  String
  location     String
  imageURL     String
  startsAt     DateTime
  endsAt       DateTime
  refundPolicy String?
  isPublished  Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String

  user         User          @relation(fields: [userId], references: [id])
  tickets      Ticket[]
  ticketTypes  TicketType[]
  transactions Transaction[]
}

model TicketType {
  id    String @id @default(cuid())
  name  String
  price Int
  limit Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  event   Event    @relation(fields: [eventId], references: [id])
  eventId String
  tickets Ticket[]
}

model Transaction {
  id              String @id @default(cuid())
  stripePaymentId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tickets Ticket[]
  event   Event    @relation(fields: [eventId], references: [id])
  user    User     @relation(fields: [userId], references: [id])

  eventId String
  userId  String
}

model Ticket {
  id String @id @default(cuid())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  usedAt    DateTime?

  transaction Transaction @relation(fields: [transactionId], references: [id])
  event       Event       @relation(fields: [eventId], references: [id])
  type        TicketType  @relation(fields: [ticketTypeId], references: [id])
  user        User        @relation(fields: [userId], references: [id])

  eventId       String
  ticketTypeId  String
  transactionId String
  userId        String
}
